"""
Type hints for OpenCV (cv2) to help the IDE's type checker.
This file isn't imported at runtime but helps with development.
"""
from typing import Any, Tuple, List, Dict, Union, Optional
import numpy as np

# Basic OpenCV functions
def resize(img: np.ndarray, dsize: Tuple[int, int], fx: Optional[float] = None, fy: Optional[float] = None, interpolation: int = 0) -> np.ndarray: ...
def cvtColor(src: np.ndarray, code: int, dst: Optional[np.ndarray] = None, dstCn: int = 0) -> np.ndarray: ...
def inRange(src: np.ndarray, lowerb: np.ndarray, upperb: np.ndarray) -> np.ndarray: ...
def countNonZero(src: np.ndarray) -> int: ...
def morphologyEx(src: np.ndarray, op: int, kernel: np.ndarray) -> np.ndarray: ...
def findContours(image: np.ndarray, mode: int, method: int) -> Tuple[List[np.ndarray], List[np.ndarray]]: ...
def contourArea(contour: np.ndarray) -> float: ...
def boundingRect(contour: np.ndarray) -> Tuple[int, int, int, int]: ...
def moments(contour: np.ndarray) -> Dict[str, float]: ...
def circle(img: np.ndarray, center: Tuple[int, int], radius: int, color: Tuple[int, int, int], thickness: int = 1) -> np.ndarray: ...
def putText(img: np.ndarray, text: str, org: Tuple[int, int], fontFace: int, fontScale: float, color: Tuple[int, int, int], thickness: int = 1) -> np.ndarray: ...
def rectangle(img: np.ndarray, pt1: Tuple[int, int], pt2: Tuple[int, int], color: Tuple[int, int, int], thickness: int = 1) -> np.ndarray: ...
def imwrite(filename: str, img: np.ndarray) -> bool: ...

# Common constants
COLOR_RGB2GRAY: int = 6
COLOR_RGB2HSV: int = 40
COLOR_RGB2BGR: int = 4

FONT_HERSHEY_SIMPLEX: int = 0
FONT_HERSHEY_PLAIN: int = 1
FONT_HERSHEY_DUPLEX: int = 2

MORPH_OPEN: int = 2
MORPH_CLOSE: int = 3

RETR_EXTERNAL: int = 0
CHAIN_APPROX_SIMPLE: int = 1 